.TH "F:/dev/Brigerad/Brigerad/src/Brigerad/Core/Core.h" 3 "Sun Feb 7 2021" "Version 0.2" "Brigerad" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F:/dev/Brigerad/Brigerad/src/Brigerad/Core/Core.h
.SH SYNOPSIS
.br
.PP
\fC#include <memory>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBBrigerad\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBBR_ASSERT\fP(x, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBBR_CORE_ASSERT\fP(x, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBBIT\fP(x)   (1 << (x))"
.br
.ti -1c
.RI "#define \fBBR_BIND_EVENT_FN\fP(fn)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename T > using \fBBrigerad::Scope\fP = std::unique_ptr< T >"
.br
.ti -1c
.RI "template<typename T > using \fBBrigerad::Ref\fP = std::shared_ptr< T >"
.br
.ti -1c
.RI "using \fBBrigerad::byte\fP = unsigned char"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename\&.\&.\&. Args> constexpr Scope< T > \fBBrigerad::CreateScope\fP (Args &&\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename T , typename\&.\&.\&. Args> constexpr Ref< T > \fBBrigerad::CreateRef\fP (Args &&\&.\&.\&. args)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BR_ASSERT(x,  \&.\&.\&.)"

.SS "#define BR_CORE_ASSERT(x,  \&.\&.\&.)"

.SS "#define BIT(x)   (1 << (x))"

.SS "#define BR_BIND_EVENT_FN(fn)"
\fBValue:\fP
.PP
.nf
    [this](auto&&\&.\&.\&. args) -> decltype(auto) {                                                     \
        return this->fn(std::forward<decltype(args)>(args)\&.\&.\&.);                                    \
    }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Brigerad from the source code\&.
