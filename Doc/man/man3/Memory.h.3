.TH "F:/dev/Brigerad/Brigerad/src/Brigerad/Core/Memory.h" 3 "Sun Feb 7 2021" "Version 0.2" "Brigerad" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F:/dev/Brigerad/Brigerad/src/Brigerad/Core/Memory.h
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBBrNewDummy\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBBrigerad\fP"
.br
.ti -1c
.RI " \fBBrigerad::Memory\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBBR_ALLOC\fP(_SIZE)   \fBBrigerad::Memory::MemAlloc\fP(_SIZE)"
.br
.ti -1c
.RI "#define \fBBR_FREE\fP(_PTR)   \fBBrigerad::Memory::MemFree\fP(_PTR)"
.br
.ti -1c
.RI "#define \fBBR_PLACEMENT_NEW\fP(_PTR)   new(Brigerad::Memory::BrNewDummy(), _PTR)"
.br
.ti -1c
.RI "#define \fBBR_NEW\fP(_TYPE)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBBrigerad::Memory::MemAlloc\fP (size_t size)"
.br
.ti -1c
.RI "void \fBBrigerad::Memory::MemFree\fP (void *ptr)"
.br
.ti -1c
.RI "template<typename T > void \fBBrigerad::Memory::BR_DELETE\fP (T *p)"
.br
.ti -1c
.RI "void * \fBoperator new\fP (size_t, \fBBrNewDummy\fP, void *ptr)"
.br
.ti -1c
.RI "void \fBoperator delete\fP (void *, \fBBrNewDummy\fP, void *)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BR_ALLOC(_SIZE)   \fBBrigerad::Memory::MemAlloc\fP(_SIZE)"

.SS "#define BR_FREE(_PTR)   \fBBrigerad::Memory::MemFree\fP(_PTR)"

.SS "#define BR_PLACEMENT_NEW(_PTR)   new(Brigerad::Memory::BrNewDummy(), _PTR)"

.SS "#define BR_NEW(_TYPE)"
\fBValue:\fP
.PP
.nf
                          new(Brigerad::Memory::BrNewDummy(), \\
                          Brigerad::Memory::MemAlloc(sizeof(_TYPE))) _TYPE
.fi
.SH "Function Documentation"
.PP 
.SS "void* operator new (size_t, \fBBrNewDummy\fP, void * ptr)\fC [inline]\fP"

.SS "void operator delete (void *, \fBBrNewDummy\fP, void *)\fC [inline]\fP"
This is only required so we can use the symmetrical new()\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Brigerad from the source code\&.
